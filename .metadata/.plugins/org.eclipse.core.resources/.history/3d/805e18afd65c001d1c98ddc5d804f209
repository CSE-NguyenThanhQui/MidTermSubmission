/*
 * button.c
 *
 *  Created on: Sep 27, 2022
 *      Author: Guest_demo
 */

#include "button.h"

int KeyReg0[NO_OF_BUTTONS] = {NORMAL_STATE};
int KeyReg1[NO_OF_BUTTONS] = {NORMAL_STATE};
int KeyReg2[NO_OF_BUTTONS] = {NORMAL_STATE};
int KeyReg3[NO_OF_BUTTONS] = {NORMAL_STATE};
int HeldKey[NO_OF_BUTTONS] = {NORMAL_STATE};
uint16_t buttonPin[NO_OF_BUTTONS]={RE_Pin, INC_Pin, DEC_Pin};

int TimeOutForKeyPress =  300;
int button_flag[NO_OF_BUTTONS] = {0};

int isButtonPressed(int index){
	if (button_flag[index] == 1){
		button_flag[index] = 0;
		return 1;
	}
	return 0;
}
int isButtonPressed3s(int index){
	if (HeldKey[index] == 1){
		HeldKey[index] = 1;
		return 1;
	}
	return 0;
}

void subKeyProcess(int index){
//	timer_flag[TIMER_BUTTON] = 0;
	button_flag[index] = 1;
}

void getKeyInput(){
	for(int i = 0; i < NO_OF_BUTTONS; i++){
  KeyReg2[i] = KeyReg1[i];
  KeyReg1[i] = KeyReg0[i];
  KeyReg0[i] = HAL_GPIO_ReadPin(GPIOA, buttonPin[i]);
  if ((KeyReg1[i] == KeyReg0[i]) && (KeyReg1[i] == KeyReg2[i])){
    if (KeyReg2[i] != KeyReg3[i]){
      KeyReg3[i] = KeyReg2[i];

      if (KeyReg3[i] == PRESSED_STATE){
        TimeOutForKeyPress = 300;
        subKeyProcess(i);
      }
    } else {
       TimeOutForKeyPress --;
        if (TimeOutForKeyPress == 0){
        	//----------------------------
        	if (KeyReg2[i] == PRESSED_STATE){
        		//HAL_GPIO_WritePin(GPIOA, LED_RED_Pin, RESET);
        		HeldKey[i] = 1;
        		KeyReg3[i] = NORMAL_STATE;
        		TimeOutForKeyPress = 300;
        	}
        	else{
        	//---------------------------
        		KeyReg3[i] = NORMAL_STATE;
        		HeldKey[i] = 0;
        		TimeOutForKeyPress = 300;
        		//HAL_GPIO_WritePin(GPIOA, LED_RED_Pin, SET);
        	}
        }
    }
  }
}
}

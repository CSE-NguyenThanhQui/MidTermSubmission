/*
 * button.c
 *
 *  Created on: Sep 27, 2022
 *      Author: Guest_demo
 */

#include "button.h"

int KeyReg0[NO_OF_BUTTONS] = {NORMAL_STATE};
int KeyReg1[NO_OF_BUTTONS] = {NORMAL_STATE};
int KeyReg2[NO_OF_BUTTONS] = {NORMAL_STATE};
int KeyReg3[NO_OF_BUTTONS] = {NORMAL_STATE};

static uint16_t counterForButtonPress1s[NO_OF_BUTTONS];
static uint8_t flagForButtonPress1s[NO_OF_BUTTONS];
#define DURATION_FOR_AUTO_INCREASING	   100
#define BUTTON_IS_PRESSED                  GPIO_PIN_RESET
#define BUTTON_IS_RELEASED                 GPIO_PIN_SET


uint16_t buttonPin[NO_OF_BUTTONS]={RE_Pin, INC_Pin, DEC_Pin};

int TimeOutForKeyPress =  500;
int button_flag[NO_OF_BUTTONS] = {0};

int isButtonPressed(int index){
	if (button_flag[index] == 1){
		button_flag[index] = 0;
		return 1;
	}
	return 0;
}

int isButtonPressed1s(int index){
	if(index >= NO_OF_BUTTONS) return 0;
	return (flagForButtonPress1s[index] == 1);
}
void subKeyProcess(int index){
//	timer_flag[TIMER_BUTTON] = 0;
	button_flag[index] = 1;
}

void getKeyInput(){
	for(int i = 0; i < NO_OF_BUTTONS; i++){
  KeyReg2[i] = KeyReg1[i];
  KeyReg1[i] = KeyReg0[i];
  KeyReg0[i] = HAL_GPIO_ReadPin(GPIOA, buttonPin[i]);
  if ((KeyReg1[i] == KeyReg0[i]) && (KeyReg1[i] == KeyReg2[i])){
    if (KeyReg2[i] != KeyReg3[i]){
      KeyReg3[i] = KeyReg2[i];



  	if(button_flag[i] == BUTTON_IS_PRESSED){
  			//if a button is pressed, we start counting
  				if(counterForButtonPress1s[i] < DURATION_FOR_AUTO_INCREASING){
  					counterForButtonPress1s[i]++;
  				} else {
  				//the flag is turned on when 1 second has passed
  				//since the button is pressed.
  					flagForButtonPress1s[i] = 1;
  					//todo
  				}
  			} else {
  				counterForButtonPress1s[i] = 0;
  				flagForButtonPress1s[i] = 0;
  			}


      if (KeyReg3[i] == PRESSED_STATE){
        TimeOutForKeyPress = 100;
        subKeyProcess(i);
      }

    } else {
       TimeOutForKeyPress --;
        if (TimeOutForKeyPress == 0){
        	//----------------------------
        	if (KeyReg2[i] == PRESSED_STATE){
        		//HAL_GPIO_WritePin(GPIOA, LED_RED_Pin, RESET);
        	}
        	//---------------------------
          KeyReg3[i] = NORMAL_STATE;

          TimeOutForKeyPress = 100;
          //HAL_GPIO_WritePin(GPIOA, LED_RED_Pin, SET);
        }
    }
  }
}
}
